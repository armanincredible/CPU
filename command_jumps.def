        /*if  (*line[i].adress == 'J') &&
            (*(#name) == 'J')                                                                   
        {                                                                                       \
            printf ("J\n");                                                                     \
            #define DEF_CMD(num, name, ...)                                                     \
                    if  (*line[i].adress == 'J') &&                                             \
                        (*(#name) == 'J')                                                       \
                    {                                                                           \
                        if ((strncmp (line[i].adress, #name, sizeof (#name) - 1) == 0) &&           \
                            (sscanf (line[i].adress + sizeof (#name), "%s", &lb_name) == 1))        \
                        {                                                                           \
                            bit_field.cmd = num;                                                    \
                        }                                                                           \
                        bit_field.inm = 1;
                        arg_jump(void)
                    }

            bit_field.inm = 1;
            #include "command_jumps.def"
            arg_jump(void)

            #undef DEF_CMD
        }*/


        /*if (sscanf (line[i].adress, "PUSH [%cX + %d]", &reg, &value) == 2)
        {
            printf ("PUSH [%cX + %d]\n", reg, value);
            bit_field.ram = 1;
            bit_field.cmd = PUSH;

            arg_reg_inm(void)
        }
        if (sscanf (line[i].adress, "PUSH [%d]", &value) == 1)
        {
            printf ("PUSH [%d]\n", value);
            bit_field.ram = 1;
            bit_field.cmd = PUSH;

            arg_inm(void)
        }
        if (sscanf (line[i].adress, "PUSH [%cX]", &reg) == 1)
        {
            printf ("PUSH [%cX]\n", reg);
            bit_field.ram = 1;
            bit_field.cmd = PUSH;

            arg_reg(void)
        }

        if (sscanf (line[i].adress, "PUSH %cX + %d", &reg, &value) == 2)
        {
            printf ("PUSH %cX + %d\n", reg, value);
            bit_field.ram = 0;
            bit_field.cmd = PUSH;

            arg_reg_inm(void)
        }

        if (sscanf (line[i].adress, "PUSH %d", &value) == 1)
        {
            printf ("PUSH %d\n", value);
            bit_field.ram = 0;
            bit_field.cmd = PUSH;

            arg_inm(void)
        }

        if (sscanf (line[i].adress, "PUSH %cX", &reg) == 1)
        {
            printf ("PUSH %cX\n", reg);
            bit_field.ram = 0;
            bit_field.cmd = PUSH;

            arg_reg(void)
        }

        if (sscanf (line[i].adress, "POP [%cX + %d]", &reg, &value) == 2)
        {
            printf ("POP [%cX + %d]\n", reg, value);
            bit_field.ram = 1;
            bit_field.cmd = POP;

            arg_reg_inm(void)
        }

        if (sscanf (line[i].adress, "POP [%d]", &value) == 1)
        {
            printf ("POP [%d]\n", value);
            bit_field.ram = 1;
            bit_field.cmd = POP;

            arg_inm(void)
        }

        if (sscanf (line[i].adress, "POP [%cX]", &reg) == 1)
        {
            printf ("POP [%cX]\n", reg);
            bit_field.ram = 1;
            bit_field.cmd = POP;

            arg_reg(void)
        }

        if (sscanf (line[i].adress, "POP %cX", &reg) == 1)
        {
            printf ("POP %cX\n", reg);
            bit_field.ram = 0;
            bit_field.cmd = POP;

            arg_reg(void)
        }*/